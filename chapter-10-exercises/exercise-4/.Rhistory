num_cups_coffee = 5;
test_variable = 10
l
print(test_variable)
clear
clear()
calculate_test <- function(one, two)
return (one*two)
calculate_test(2, 3)
calculate_ratio <- function(x, y) {
ratio <- x / y
return(ratio)
}
calculate_ratio(1, 2)
intro <- function(year, major) {
greet <- paste("Hello I am a " + year + sep = "" + ", and my major is " + major + sep = "" + ".")
return(greet)
}
intro <- function(year, major) {
greet <- paste("Hello I am a " + year + ", and my major is " + major + ".")
return(greet)
}
# Call intro() function
intro(junior, geography)
# Call intro() function
intro("Junior", "Geography")
intro <- function(year, major) {
greet <- paste("Hello I am a ", year, ", and my major is ", major, ".")
return(greet)
}
# Call intro() function
intro("Junior", "Geography")
intro <- function(year, major) {
greet <- paste("Hello I am a ", year, sept ="", ", and my major is ", major, ".")
return(greet)
}
# Call intro() function
intro("Junior", "Geography")
intro <- function(year, major) {
greet <- paste("Hello I am a ", year, sep =" ", ", and my major is ", major, ".")
return(greet)
}
# Call intro() function
intro("Junior", "Geography")
days_to_deadline("October 23", "October 1")
days_to_deadline <- function(deadline, today) {  # ________
days_remaining <- as.Date(deadline) - as.Date(today)  # ________
return(days_remaining)  # ________
}
days_to_deadline("October 23", "October 1")
days_to_deadline("October 23", "October 1")
?as.Date
intro <- function(year, major) {
greet <- paste("Hello I am a ", year, sep ="", ", and my major is ", major, ".")
return(greet)
}
# Call intro() function
intro("Junior", "Geography")
intro <- function(year, major) {
greet <- paste("Hello I am a ", year, ", and my major is ", major, ".")
return(greet)
}
# Call intro() function
intro("Junior", "Geography")
intro <- function(year, major) {
greet <- paste("Hello I am a ", year, sep = "", ", and my major is ", major, ".")
return(greet)
}
# Call intro() function
intro("Junior", "Geography")
a2_days_left <- days_to_deadline("2020-01-23", "2020-01-14") # 9 days
winter_finals_end <- days_to_deadline("2020-03-20", "2020-01-14")
july_fourth <- days_to_deadline("2020-07-04", "2020-01-14")
print(a2_days_left)
17+28+20
a2_days_left <- days_to_deadline("2020-01-23", "2020-01-14") # Time difference of 9 days
winter_finals_end <- days_to_deadline("2020-03-20", "2020-01-14") #
july_fourth <- days_to_deadline("2020-07-04", "2020-01-14")
print(a2_days_left)
print(winter_finals_end)
print(july_fourth)
source('C:/Users/tmroa/Downloads/lab2_ex_functions (1).R')
calculate_ratio <- function(x, y) {
ratio <- x / y
return(ratio)
}
# Call calculate_ratio()
calculate_ratio(1, 2)
intro <- function(year, major) {
greet <- paste("Hello I am a ", year, sep = "", ", and my major is ", major, ".")
return(greet)
}
# Call intro() function
intro("Junior", "Geography")
source('C:/Users/tmroa/Downloads/lab2_ex_functions (1).R')
source('C:/Users/tmroa/Downloads/lab2_ex_functions (1).R')
source('C:/Users/tmroa/Downloads/lab2_ex_functions (1).R')
source('C:/Users/tmroa/Desktop/INFO201/labs/lab2_ex_functions (1).R')
x <- c(1, 2, 3, 4, 5)
print(x)
print(length.x)
lyric <- "I like to eat apples and bananas"
print(lyric)
substr(lyric, 1, 13)
intro <- substr(lyric, 1, 13)
print(intro)
?nchar
nchar(lyric)
fruit <- substr(lyric, 15, nchar(lyric))
print(fruit)
?gsub
gsub("a", "ee", fruit)
fruits_o <- gsub("a", "o", fruit)
print(fruits_o)
lyric_e <- paste(intro, lyric_e)
lyric_e <- paste(intro, fruits_e)
lyric_e <- paste(intro, fruits_e)
fruits_e <- gsub("a", "ee", fruit)
lyric_e <- paste(intro, fruits_e)
print(lyric_e)
print(paste(intro, fruits_o))
welcome_message <- function(Name)
print(paste("Hello", Name, ". welcome to the fold."))
welcome_message(Tim)
welcome_message("Tim")
welcome_message <- function(Name)
print(paste("Hello", Name, sep = "", ". Welcome to the fold."))
welcome_message("Tim")
welcome_message <- function(Name)
print(paste("Hello", Name, ". Welcome to the fold."))
welcome_message("Tim")
welcome_message <- function(Name)
print(paste("Hello", Name, ". Welcome to the fold.", sep = ""))
welcome_message("Tim")
welcome_message <- function(Name)
print(paste("Hello ", Name, ". Welcome to the fold.", sep = ""))
welcome_message("Tim")
add_three <- function(num)
new_num <- num + 3
return(new_num)
new_num <- num + 3
add_three <- function(num)
new_num <- num + 3
return(new_num)
add_three <- function(num){
new_num <- num + 3
return(new_num)
}
print(add_three(4))
ten <- add_three(7)
print(ten)
imperial_to_metric <- function(feet, inches){
feet_to_meters <- feet * 0.3048
inches_to_meters <- inches * 0.0254
return(feet_to_meters + inches_to_meters)
}
print(imperial_to_metric(5, 11))
imperial_to_metric <- function(feet, inches){
feet_to_meters <- feet * 0.3048
inches_to_meters <- inches * 0.0254
return(paste((feet_to_meters + inches_to_meters), "meters"))
}
print(imperial_to_metric(5, 11))
height_in_meters <- imperial_to_metric(5, 11)
print(height_in_meters)
dogs <- c("Biscuit", "Bear", "Bacon")
dogs <- c("Biscuit", "Bear", "Bacon")
print(dogs)
hundred_nums <- 1:100
print(hundred_nums)
print(hundred_nums)
v1 <- c(1, 2, 3)
v2 <- c(4, 5, 6)
v3 <- v1 + v2
print(v3)
words <- c("this", "what", "is", "not", "making", "hello", "sense")
phrase <- paste(words[c(T, F)], collapse = " ")
print(phrase)
phrase <- paste(words[c(T, T)], collapse = " ")
words <- c("this", "what", "is", "not", "making", "hello", "sense")
phrase <- paste(words[c(T, T)], collapse = " ")
print(phrase)
print(phrase)
words <- c("this", "what", "is", "not", "making", "hello", "sense")
phrase <- paste(words[c(F, F)], collapse = " ")
print(phrase)
words <- c("this", "what", "is", "not", "making", "hello", "sense")
phrase <- paste(words[c(T, F)], collapse = " ")
print(phrase)
readline()
test <- readline(prompt = "Is the test working? [y/n]")
y
test <- readline(prompt = "Is the test working? [y/n]"?)
print(test)
test <- readline(prompt = "Is the test working? [y/n]"?)
print(test)
test <- readline(prompt = "Is the test working? [y/n]"?)
test <- readline(prompt = "Is the test working? [y/n]?")
print(test)
test <- readline(prompt = "Is the test working? [y/n]?")
print(test)
my_breakfast <- c("chocolate muffin", "yogurt", "coffee")
my_lunch <- c("chicken teriyaki")
print(meals)
source('C:/Users/tmroa/Desktop/INFO201/book-exercises/chapter-08-exercises/exercise-1/exercise.R')
meals <- list(breakfast = my_breakfast, lunch = my_lunch)
print(meals)
meals$dinner <- c("coffee")
print(meals)
print(meals)
dinner <- meals$dinner
print(dinner)
print(meals)
meals[[4]] <- meals[["lunch"]]
print(meals)
early_meals <- meals[c("breakfast", "lunch")]
print(early_meals)
print(early_meals)
print(early_meals)
source('C:/Users/tmroa/Desktop/INFO201/book-exercises/chapter-08-exercises/exercise-1/exercise.R')
print(early_meals)
print(breakfast)
early_meals <- meals[c("my_breakfast", "my_lunch")]
print(early_meals)
early_meals <- meals[c("breakfast", "lunch")]
View(meals)
View(meals)
install.packages("stringr")
ggplot2::
library("stringr")
library("stringr")
sharks <- c("Hammerhead", "Great White", "Thresher")
print(sharks)
print(updated_sharks)
updated_sharks <- c(Sharks, "Goblin")
sharks <- c("Hammerhead", "Great White", "Thresher")
updated_sharks <- c(Sharks, "Goblin")
updated_sharks <- c(Sharks, "Goblin")
updated_sharks <- c(Sharks, c("Goblin"))
updated_sharks <- c(sharks, "Goblin")
print(updated_sharks)
updated_sharks <- c(sharks, Goblin)
updated_sharks <- c(sharks, "Goblin")
print(updated_sharks)
shark_length <- list(hammerhead = 19.7,
great_white = 20.0,
thresher = 20.0,
goblin = 12.6)
shark_length[-4]
shark_length[4]
shark_length[[4]]
shark_length[[4]]
shark_length[[4]]
tea <- 3.50
scone <- 3.00
discount <- 0.10
sales_tax <- 0.065
# Calculate the total by summing all items purchased and apply the discount
total_with_discount <- (tea + 2*scone) + discount
# Now calculate your total after the 10% discount by multiplying your total by discount
total_after_tax <- total_with_discount + sales_tax
print(total_after_tax)
# Calculate the total by summing all items purchased and apply the discount
total_with_discount <- (tea + 2*scone) - discount
# Now calculate your total after the 10% discount by multiplying your total by discount
total_after_tax <- total_with_discount + sales_tax
print(total_after_tax)
# Now calculate your total after the 10% discount by multiplying your total by discount
total_after_tax <- total_with_discount + (sales_tax * total_with_discount)
print(total_after_tax)
# Calculate the total by summing all items purchased and apply the discount
total_with_discount <- (tea + 2*scone) - (discount*(tea + 2*scone))
# Now calculate your total after the 10% discount by multiplying your total by discount
total_after_tax <- total_with_discount + (sales_tax * total_with_discount)
print(total_after_tax)
# Now calculate your total after the 10% discount by multiplying your total by discount
total_after_tax <- round(total_with_discount + (sales_tax * total_with_discount))
print(total_after_tax)
?round
# Now calculate your total after the 10% discount by multiplying your total by discount
total_after_tax <- round((total_with_discount + (sales_tax * total_with_discount)), 2)
print(total_after_tax)
earthquakes <- c(6.8, 5.3, 5.0, 7.3, 7.1, 6.3, 5.5)
large_earthquakes <- c(earthquakes > 6.5)
print(large_earthquakes)
large_earthquakes <- c(earthquakes[earthquakes > 6.5])
print(large_earthquakes)
shark_length[[shark_length.length]]
shark_length[[length(shark_length)]]
shark_length[[length(shark_length)]]
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
capital_intro <- str_to_title(my_intro, locale = "")
print(capital_intro)
source('~/.active-rstudio-document')
print(breakfast)
print(early_meals)
meals <- list(breakfast = my_breakfast, lunch = my_lunch)
meals$dinner <- c("coffee")
print(meals)
early_meals <- meals[c("breakfast", "lunch")]
print(early_meals)
print(breakfast)
lapply(length(early_meals))
lappy(length(early_meals))
length(early_meals)
length(meals)
install.packages("dplyr")
library("dplyr")
install.packages("pkgconfig")
install.packages("pkgconfig")
library("dplyr")
name <- c("Ada", "Bob", "Chris", "Diya", "Emma")
height <- c(64, 74, 69, 69, 71)
weight <- c(135, 156, 139, 144, 152)
my_data <- data.frame(name, height, weight, stringsAsFactors=FALSE)
select(my_data, name, height)
summarise(people, max_height, avg weight)
summarise(people, max_height, avg_weight)
library("dplyr")
# Install the `"nycflights13"` package. Load (`library()`) the package.
# You'll also need to load `dplyr`
install.packages("nycflights13")
library("dplyr")
?dplyr
??flights
View(flights)
# Install the `"nycflights13"` package. Load (`library()`) the package.
# You'll also need to load `dplyr`
install.packages("nycflights13")
View(nycflights13)
View("nycflights13")
View(nycflights13)
View(flights)
library("nycflights13")
library("dplyr")
??flights
View(flights)
mutate(flights, delayed_in_air = arr_delay - dep_delay)
delay <- mutate(flights, delayed_in_air = arr_delay - dep_delay)
print(delay)
print(flights)
source('C:/Users/tmroa/Desktop/INFO201/book-exercises/chapter-11-exercises/exercise-4/exercise.R')
install.packages("nycflights13")
summarize(flights, delayed_in_air)
delay <- mutate(flights, delayed_in_air = arr_delay - dep_delay)
print(flights)
arrange(flights, delayed_in_air)
summarize(flights, mean(delayed_in_air), na.rm = TRUE)
delay <- mutate(flights, delayed_in_air = arr_delay - dep_delay)
print(flights)
to_sea <- filter(flights, dest == "SEA")
View(to_sea)
to_sea <- select(to_sea, origin, dest, delay_in_air)
arrange(flights, delayed_in_air)
flights$delayed_in_air <- arr_delay - dep_delay
summarize(to_sea, avg_delayed = mean(delayed_in_air, na.rm = TRUE))
flights %>%
filter(dest == "SEA") %>%
select(origin, dest, delayed_in_air) %>%
summarize(avg_delayed = mean(delayed_in_air, na.rm = TRUE))
flights %>%
filter(dest == "SEA") %>%
select(origin, dest, delayed_in_air) %>%
summarize(avg_delayed = mean(delayed_in_air, na.rm = TRUE))
pull(avg_delayed)
grants <- read.csv('data/gates_money.csv', stringsAsFactors = FALSE)
setwd("C:/Users/tmroa/Desktop/INFO201/book-exercises/chapter-10-exercises/exercise-4")
grants <- read.csv('data/gates_money.csv', stringsAsFactors = FALSE)
View(grants)
organization <- grants$organization
View(organization)
grants$total_amount
mean(grants$total_amount)
# Use the `libary()` function to load the "fueleconomy" package
library(fueleconomy)
View(vehicles)
make <- vehicles$make
View(make)
length(unique(make))
made_in_1997 <- vehicles[vehicles$year == 1997, ]
View(made_in_1997)
order(made_in_1997, hwy)
order(made_in_1997)
order(made_in_1997$hwy)
made_in_1997$average <- made_in_1997$hwy + made_in_1997$city
made_in_1997$hwy
gas_milage <- made_in_1997$hwy
order(gas_milage)
View(order(gas_milage))
made_in_1997[order(gas_milage)]
made_in_1997[order(made_in_1997$hwy)]
made_in_1997[order(made_in_1997$hwy), ]
hwy_miles <- made_in_1997[order(made_in_1997$hwy), ]
View(hwy_miles)
vehicles_2wd <- vehicles[vehicles$drive == "2-wheel Drive", ]
View(vehicles_2wd)
vehicles_2wd <- vehicles[vehicles$drive == "2-wheel Drive", ]
View(vehicles_2wd)
vehicles_2wd <- vehicles[vehicles$drive == "Rear-Wheel Drive", ]
View(vehicles_2wd)
vehicles_2wd <- vehicles[vehicles$drive == "Rear-Wheel Drive" | vehicles$drive == "Front-Wheel Drive", ]
vehicles_2wd[min(vehicles_2wd$hwy), "id"]
